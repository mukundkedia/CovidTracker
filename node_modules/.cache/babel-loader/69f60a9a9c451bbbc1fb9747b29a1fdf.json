{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mukundkedia7478/CovidTracker/covidtracker/src/components/cards/cards.js\";\nimport React from 'react';\nimport { Card, CardContent, TypoGraphy, Grid } from '@material-ui/core';\nimport styles from \"./cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths,\n    lastUpdate\n  },\n  country\n}) => {\n  if (!confirmed) {\n    return \"Loading.. Please wait\";\n  }\n\n  const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n  let cardDetails = [{\n    styles: styles.infected,\n    text: \"Infected\",\n    value: confirmed.value,\n    bottomText: \"Number of infect cases of COVID-19\"\n  }, {\n    style: styles.recovered,\n    text: \"Recovered\",\n    value: recovered.value,\n    bottomText: \"Number of recoveries from COVID-19\"\n  }, {\n    style: styles.deaths,\n    text: \"Deaths\",\n    value: deaths.value,\n    bottomText: \"Number of deaths caused by COVID-19\"\n  }, {\n    style: styles.active,\n    text: \"Active\",\n    value: active,\n    bottomText: \"Number of active cases of COVID-19\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justify: \"center\",\n      children: cardDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        component: Card,\n        xs: 12,\n        md: 2,\n        className: cx(styles.Card, detail.style),\n        style: {\n          margin: \"0px 23.675px\",\n          padding: \"12px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: detail.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              start: 0,\n              end: detail.value,\n              duration: 2,\n              separator: \",\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: \"Last Updated at : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: new Date(lastUpdate).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: new Date(lastUpdate).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: detail.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: [\" \", country, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Cards;\nexport default cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/mukundkedia7478/CovidTracker/covidtracker/src/components/cards/cards.js"],"names":["React","Card","CardContent","TypoGraphy","Grid","styles","CountUp","cx","Cards","data","confirmed","recovered","deaths","lastUpdate","country","active","cardDetails","infected","text","value","bottomText","style","container","map","detail","index","margin","padding","Date","toDateString","toLocaleTimeString","cards"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card,CardContent,TypoGraphy,Grid} from '@material-ui/core';\nimport styles from \"./cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n    data : {confirmed, recovered, deaths, lastUpdate },\n    country\n    })=>{\n        if(!confirmed){\n            return \"Loading.. Please wait\";\n        }\n        const active = confirmed[\"value\"]-recovered[\"value\"]-deaths[\"value\"];\n        let cardDetails = [\n            {\n                styles:styles.infected,\n                text : \"Infected\",\n                value:confirmed.value,\n                bottomText: \"Number of infect cases of COVID-19\",\n            },\n            {\n                style: styles.recovered,\n                text: \"Recovered\",\n                value: recovered.value,\n                bottomText: \"Number of recoveries from COVID-19\",\n            },\n            {\n                style: styles.deaths,\n                text: \"Deaths\",\n                value: deaths.value,\n                bottomText: \"Number of deaths caused by COVID-19\",\n            },\n            {\n                style: styles.active,\n                text: \"Active\",\n                value: active,\n                bottomText: \"Number of active cases of COVID-19\",\n            }\n        ];\n        return (\n            <div className={styles.container}>\n                <Grid container spacing={3} justify=\"center\">\n                    {cardDetails.map((detail,index)=>(\n                         <Grid\n                         item\n                         component={Card}\n                         xs={12}\n                         md={2}\n                         className={cx(styles.Card, detail.style)}\n                         key={index}\n                         style={{ margin: \"0px 23.675px\", padding: \"12px\" }}\n                       >\n                         <CardContent>\n                           <Typography color=\"textPrimary\" gutterBottom>\n                             <b>{detail.text}</b>\n                           </Typography>\n                           <Typography variant=\"h5\">\n                             <CountUp\n                               start={0}\n                               end={detail.value}\n                               duration={2}\n                               separator=\",\"\n                             />\n                           </Typography>\n                           <Typography color=\"textPrimary\">Last Updated at : </Typography>\n                           <Typography color=\"textSecondary\" variant=\"body2\">\n                             {new Date(lastUpdate).toDateString()}\n                           </Typography>\n                           <Typography color=\"textSecondary\" variant=\"body2\">\n                             {new Date(lastUpdate).toLocaleTimeString()}\n                           </Typography>\n                           <Typography variant=\"body2\">{detail.bottomText}</Typography>\n                           <Typography color=\"textPrimary\"> {country} </Typography>\n                         </CardContent>\n                       </Grid>\n\n                    ))}\n                </Grid>\n            </div>\n        )\n    }\n\nexport default cards\n\n"]},"metadata":{},"sourceType":"module"}