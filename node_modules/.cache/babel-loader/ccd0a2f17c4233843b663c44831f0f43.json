{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mukundkedia7478/CovidTracker/covidtracker/src/Components/Cards/Cards.js\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths,\n    lastUpdate\n  },\n  country\n}) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n  let carddetails = [{\n    style: styles.infected,\n    text: \"Infected\",\n    value: confirmed.value,\n    bottomText: \"Number of infect cases of COVID-19\"\n  }, {\n    style: styles.recovered,\n    text: \"Recovered\",\n    value: recovered.value,\n    bottomText: \"Number of recoveries from COVID-19\"\n  }, {\n    style: styles.deaths,\n    text: \"Deaths\",\n    value: deaths.value,\n    bottomText: \"Number of deaths caused by COVID-19\"\n  }, {\n    style: styles.active,\n    text: \"Active\",\n    value: active,\n    bottomText: \"Number of active cases of COVID-19\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justify: \"center\",\n      children: carddetails.map((detail, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        component: Card,\n        xs: 12,\n        md: 2,\n        className: cx(styles.Card, detail.style),\n        style: {\n          margin: \"0px 23.675px\",\n          padding: \"12px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: detail.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              start: 0,\n              end: detail.value,\n              duration: 2,\n              separator: \",\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: \"Last Updated at : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: new Date(lastUpdate).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: new Date(lastUpdate).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: detail.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: [\" \", country, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/mukundkedia7478/CovidTracker/covidtracker/src/Components/Cards/Cards.js"],"names":["React","Card","CardContent","Typography","Grid","styles","CountUp","cx","Cards","data","confirmed","recovered","deaths","lastUpdate","country","active","carddetails","style","infected","text","value","bottomText","container","map","detail","index","margin","padding","Date","toDateString","toLocaleTimeString"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n  data: { confirmed, recovered, deaths, lastUpdate },\n  country,\n}) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n  let carddetails = [\n    {\n      style: styles.infected,\n      text: \"Infected\",\n      value: confirmed.value,\n      bottomText: \"Number of infect cases of COVID-19\",\n    },\n    {\n      style: styles.recovered,\n      text: \"Recovered\",\n      value: recovered.value,\n      bottomText: \"Number of recoveries from COVID-19\",\n    },\n    {\n      style: styles.deaths,\n      text: \"Deaths\",\n      value: deaths.value,\n      bottomText: \"Number of deaths caused by COVID-19\",\n    },\n    {\n      style: styles.active,\n      text: \"Active\",\n      value: active,\n      bottomText: \"Number of active cases of COVID-19\",\n    },\n  ];\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {carddetails.map((detail, index) => (\n          <Grid\n            item\n            component={Card}\n            xs={12}\n            md={2}\n            className={cx(styles.Card, detail.style)}\n            key={index}\n            style={{ margin: \"0px 23.675px\", padding: \"12px\" }}\n          >\n            <CardContent>\n              <Typography color=\"textPrimary\" gutterBottom>\n                <b>{detail.text}</b>\n              </Typography>\n              <Typography variant=\"h5\">\n                <CountUp\n                  start={0}\n                  end={detail.value}\n                  duration={2}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography color=\"textPrimary\">Last Updated at : </Typography>\n              <Typography color=\"textSecondary\" variant=\"body2\">\n                {new Date(lastUpdate).toDateString()}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"body2\">\n                {new Date(lastUpdate).toLocaleTimeString()}\n              </Typography>\n              <Typography variant=\"body2\">{detail.bottomText}</Typography>\n              <Typography color=\"textPrimary\"> {country} </Typography>\n            </CardContent>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;"]},"metadata":{},"sourceType":"module"}